{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAeeA,EAbF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC5B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACC,6BAAKF,IACL,4BAAIC,WCaOK,EAlBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAChB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCAIC,EARF,SAACC,GACb,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACEJ,EAAMK,YCQKC,EAXC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC9B,OACC,qBAAKjB,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVkB,KAAK,SACLC,YAAY,eACZC,SAAUH,OCcEI,E,kDApBd,WAAYZ,GAAO,IAAD,8BACjB,cAAMA,IACDa,MAAM,CACVC,UAAU,GAHM,E,qDAMlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAEzB,WACC,OAAGG,KAAKJ,MAAMC,SACN,4DAGAG,KAAKjB,MAAMK,a,GAfMc,aC4CZC,G,wDAtCd,aAAe,IAAD,8BACb,gBAMFC,eAAe,SAACC,GACf,EAAKJ,SAAS,CAACX,YAAae,EAAMC,OAAOC,SANxC,EAAKX,MAAM,CACVlB,OAAQ,GACRY,YAAa,IAJD,E,qDAWf,WAAoB,IAAD,OAClBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAEnC,WACC,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQY,EAAhB,EAAgBA,YACVuB,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS3B,EAAY0B,kBAEtD,OAAQtC,EAAOwC,OAGd,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWiB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQmC,WAPtB,6C,GAvBgBX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3bf51106.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Card; ","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList=({robots})=>{\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobots.map((user,i)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email}/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\t\t\t\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst Scroll=(props)=>{\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border:'1px solid black', height:'500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React from 'react'\r\n\r\nconst SearchBox=({searchfield, searchChange})=>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robot'\r\n\t\t\tonChange={searchChange}/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError:true})\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Ooops something went wrong</h1>\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn this.props.children\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react'\r\nimport CardList from '../components/CardList.js'\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox.js'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './app.css'\r\n\r\nclass App extends Component {\r\n\tconstructor (){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\t\r\n\t\t}\r\n\t}\r\nonSearchChange=(event)=>{\r\n\tthis.setState({searchfield: event.target.value})\r\n\t\r\n}\r\ncomponentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response=>response.json())\r\n\t.then(users=>this.setState({robots:users}));\r\n}\r\n\trender(){\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\treturn !robots.length?\r\n\t\t<h1>Loading</h1> :\r\n\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'> RoboFriends </h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}